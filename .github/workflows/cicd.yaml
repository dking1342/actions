name: Project Setup

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Kubernetes cluster installation"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create kube directory
        run: |
          sudo mkdir /home/runner/.kube/config
          ls -la /home/runner/.kube
          ls -la /home/runner/.kube/config
          chmod 600 /home/runner/.kube
          ls -ld /home/runner/.kube

      # - name: Install doctl
      #   run: |
      #     sudo apt-get update
      #     sudo snap install doctl
      #     doctl version 
      #     doctl auth init -t ${{ secrets.DO_PAT }} 
      #     doctl account get

      # - name: Install ansible and kubernetes
      #   run: |
      #     sudo apt-get update
      #     python3 -m pip install --user ansible
      #     python3 -m pip install kubernetes
      #     ansible --version

      # - name: Install kubectl
      #   run: |
      #     sudo apt-get update
      #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #     curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
      #     echo "$(cat kubectl.sha256)  kubectl" | sha256sum -c
      #     sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      # - name: Install kubernetes core
      #   run: |
      #     sudo apt-get update
      #     ansible-galaxy collection install kubernetes.core

      # - name: Create kube directory
      #   run: |
      #     mkdir /home/runner/.kube/config
      #     ls -la /home/runner/.kube
      #     ls -la /home/runner/.kube/config
      #     chmod 600 /home/runner/.kube
      #     ls -ld /home/runner/.kube

      # - name: Kubernetes Cluster Setup
      #   uses: hashicorp/setup-terraform@v2
      # - run: terraform --version
      # - run: cd terraform && rm -fr .terraform && rm -fr .terraform.lock.hcl
      # - run: cd terraform && terraform init -backend-config="address=https://gitlab.com/api/v4/projects/${{ secrets.PROJECT_ID }}/terraform/state/${{ secrets.PROJECT_NAME }}" -backend-config="lock_address=https://gitlab.com/api/v4/projects/${{ secrets.PROJECT_ID }}/terraform/state/${{ secrets.PROJECT_NAME }}/lock" -backend-config="unlock_address=https://gitlab.com/api/v4/projects/${{ secrets.PROJECT_ID }}/terraform/state/${{ secrets.PROJECT_NAME }}/lock" -backend-config="username=${{ secrets.USERNAME }}" -backend-config="password=${{ secrets.PASSWD }}" -backend-config="lock_method=POST" -backend-config="unlock_method=DELETE" -backend-config="retry_wait_min=5"
      # - run: cd terraform && terraform validate
      # - run: cd terraform && terraform plan -lock=false -var "do_token=${{ secrets.DO_PAT }}" -var "do_token=${{ secrets.DO_PAT }}" -var "pvt_key=~/.ssh/do_key_01" -var "pub_key=~/.ssh/do_key_01.pub" -var "ssh_key=${{ secrets.DO_KEY_01 }}"
      # - run: cd terraform && terraform apply -auto-approve -lock=false -var "do_token=${{ secrets.DO_PAT }}" -var "do_token=${{ secrets.DO_PAT }}" -var "pvt_key=~/.ssh/do_key_01" -var "pub_key=~/.ssh/do_key_01.pub" -var "ssh_key=${{ secrets.DO_KEY_01 }}"
      # - run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i k8s.yaml ./ansible/cluster-install.yaml -vvv

